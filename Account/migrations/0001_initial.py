# Generated by Django 5.0.4 on 2024-05-08 14:30

import Account.models
import cloudinary_storage.storage
import cloudinary_storage.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Books',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('Book_imageUrl', models.FileField(blank=True, max_length=1000, null=True, upload_to='')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('audience', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('Instructor', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('courseduration', models.CharField(blank=True, max_length=255, null=True)),
                ('streamingtime', models.CharField(blank=True, max_length=255, null=True)),
                ('startingday', models.CharField(blank=True, max_length=255, null=True)),
                ('endingday', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=Account.models.course_file_path)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoursePurchaseRequest',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('course_id', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('MerchantRequestID', models.CharField(blank=True, max_length=255, null=True)),
                ('CheckoutRequestID', models.CharField(blank=True, max_length=255, null=True)),
                ('ResponseCode', models.CharField(blank=True, max_length=255, null=True)),
                ('ResponseDescription', models.CharField(blank=True, max_length=255, null=True)),
                ('CustomerMessage', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailSubscription',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, verbose_name='Title for your event')),
                ('startingtime', models.CharField(max_length=120)),
                ('endtime', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True, null=True)),
                ('class_link', models.TextField(blank=True, null=True)),
                ('class_password', models.TextField(blank=True, null=True)),
                ('startingday', models.DateField(null=True)),
                ('endingday', models.DateField(null=True)),
                ('audience', models.CharField(choices=[('WebDesign', 'WebDesign'), ('GraphicsDesign', 'GraphicsDesign'), ('UI/UX', 'UI/UX'), ('StoreKeeping', 'StoreKeeping'), ('DigitalExplorer', 'DigitalExplorer'), ('WebDevelopment', 'WebDevelopment'), ('Coding', 'Coding'), ('TradingTitans', 'TradingTitans'), ('PhotoshopProdigy', 'PhotoshopProdigy'), ('CulinaryCanvas', 'CulinaryCanvas'), ('SocialMediaMaverick', 'SocialMediaMaverick'), ('FitProInstructor', 'FitProInstructor'), ('NumberCruncher', 'NumberCruncher'), ('WeddingWizard', 'WeddingWizard'), ('WordPress Wiz', 'WordPress Wiz'), ('Influence Igniter', 'Influence Igniter'), ('Stocks Savvy', 'Stocks Savvy'), ('E-commerce Expertise', 'E-commerce Expertise'), ('Digital Explorer', 'Digital Explorer')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LNMOnline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CheckoutRequestID', models.CharField(blank=True, max_length=50, null=True)),
                ('MerchantRequestID', models.CharField(blank=True, max_length=20, null=True)),
                ('ResultCode', models.IntegerField(blank=True, null=True)),
                ('ResultDesc', models.CharField(blank=True, max_length=120, null=True)),
                ('Amount', models.FloatField(blank=True, null=True)),
                ('MpesaReceiptNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('Balance', models.CharField(blank=True, max_length=12, null=True)),
                ('TransactionDate', models.DateTimeField(blank=True, null=True)),
                ('PhoneNumber', models.CharField(blank=True, max_length=13, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('caption', models.CharField(blank=True, max_length=10000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=1024)),
                ('file', models.FileField(blank=True, storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to='videos/', validators=[cloudinary_storage.validators.validate_video])),
                ('image', models.ImageField(blank=True, upload_to='images/')),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('audience', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('birthday', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.CharField(blank=True, max_length=255, null=True)),
                ('extracurricular', models.CharField(blank=True, max_length=255, null=True)),
                ('mda_imageUrl', models.FileField(blank=True, max_length=1000, null=True, upload_to='')),
                ('photo_imageUrl', models.ImageField(blank=True, null=True, upload_to='')),
                ('school_credentials_imageUrl', models.FileField(blank=True, null=True, upload_to='')),
                ('terms_and_agreement_imageUrl', models.FileField(blank=True, null=True, upload_to='')),
                ('emailfield', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('profile_imageId', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_imageUrl', models.ImageField(blank=True, max_length=1000, null=True, upload_to='')),
                ('background_imageId', models.CharField(blank=True, max_length=255, null=True)),
                ('background_imageUrl', models.ImageField(blank=True, max_length=1000, null=True, upload_to='')),
                ('address', models.TextField()),
                ('Program', models.CharField(blank=True, max_length=255, null=True)),
                ('Term', models.CharField(blank=True, max_length=255, null=True)),
                ('school_credentials_two_imageId', models.CharField(blank=True, max_length=255, null=True)),
                ('school_credentials_two_imageUrl', models.CharField(blank=True, max_length=1000, null=True)),
                ('school_credentials_three_imageId', models.CharField(blank=True, max_length=255, null=True)),
                ('school_credentials_three_imageUrl', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sales_person_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('my_courses', models.CharField(blank=True, choices=[('WebDesign', 'WebDesign'), ('GraphicsDesign', 'GraphicsDesign'), ('UI/UX', 'UI/UX'), ('StoreKeeping', 'StoreKeeping'), ('DigitalExplorer', 'DigitalExplorer'), ('WebDevelopment', 'WebDevelopment'), ('Coding', 'Coding'), ('TradingTitans', 'TradingTitans'), ('PhotoshopProdigy', 'PhotoshopProdigy'), ('CulinaryCanvas', 'CulinaryCanvas'), ('SocialMediaMaverick', 'SocialMediaMaverick'), ('FitProInstructor', 'FitProInstructor'), ('NumberCruncher', 'NumberCruncher'), ('WeddingWizard', 'WeddingWizard'), ('WordPress Wiz', 'WordPress Wiz'), ('Influence Igniter', 'Influence Igniter'), ('Stocks Savvy', 'Stocks Savvy'), ('E-commerce Expertise', 'E-commerce Expertise'), ('Digital Explorer', 'Digital Explorer')], max_length=50, null=True)),
                ('is_notification', models.BooleanField(default=False)),
                ('no_of_notifications', models.IntegerField(default=0)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_first_time', models.BooleanField(default=True)),
                ('is_monthly_paid', models.BooleanField(default=False)),
                ('is_registeration_paid', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_sales', models.BooleanField(default=False)),
                ('isWebAdmin', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_email_confirmed', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('courses', models.ManyToManyField(blank=True, to='Account.course')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('my_events', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Account.events')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
